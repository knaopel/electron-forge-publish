name: Build, Make and Publish Client

on:
  push:
    branches:
      - develop
      - stage
      - master
    # tags: 'v*'

  # pull_request:
  #   branches:
  #     - develop
  #     - stage
  #     - master

  workflow_dispatch:

concurrency:
  group: build-and-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18.x'

jobs:
  make:
    name: Make Electron App
    runs-on: windows-latest
    environment: ${{ github.ref_name == 'master' && 'production' || github.ref_name == 'stage' && 'staging' || 'development' }}

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Setup Node, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set Yarn timeout
        uses: borales/actions-yarn@v5
        with:
          cmd: config set network-timeout 300000

      - name: Install dependencies
        uses: borales/actions-yarn@v5
        with:
          cmd: install
          dir: app

      - name: Make Electron App
        uses: borales/actions-yarn@v5
        with:
          cmd: make
          dir: app

      # - name: Read package.json file
      #   uses: rexdefuror/read-package-json@v1.0.5
      #   with:
      #     path: app

      # - name: Run tests
      #   shell: pwsh
      #   env:
      #     RELEASE_BINARY: '${{ env.PACKAGE_NAME }}-${{env.PACKAGE_VERSION}} Setup.exe'
      #   run: |
      #     echo $ENV:PACKAGE_NAME
      #     echo $ENV:RELEASE_BINARY
      #     echo event_name ${{ github.event_name }}
      #     echo ref_type ${{ github.ref_type }}
      #     ls app/out
      #     ls app/out/make
      #     ls app/out/make/squirrel.windows
      #     ls app/out/make/squirrel.windows/x64

      - name: Upload Artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-app
          path: |
            app/out/make/squirrel.windows/x64/
            app/package.json

  release:
    name: Tag and Release Electon App
    needs: make
    runs-on: ubuntu-latest
    # if: ${{ github.ref_type == 'tag' }}
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: electron-app

      - name: Show contents of download
        run: ls -R

      - name: Read package.json file
        uses: rexdefuror/read-package-json@v1.0.5

      - name: Show package values
        run: |
          echo PACKAGE_NAME=${{ env.PACKAGE_NAME }}
          echo PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          echo PACKAGE_PRODUCTNAME=${{ env.PACKAGE_PRODUCTNAME }}

      - name: Tag and Release Electron App
        uses: avakar/tag-and-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          prerelease: ${{ github.ref_name != 'master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   id: create-release
      #   uses: actions/create-release@v1
      #   if: ${{ github.ref_type == 'tag' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     RELEASE_BINARY: '${{ env.PACKAGE_NAME }}-${{env.PACKAGE_VERSION}} Setup.exe'
      #     TAG_NAME: ${{ github.ref_name }}
      #   with:
      #     tag_name: ${{ env.TAG_NAME }}
      #     release_name: Release ${{ env.TAG_NAME }}
      #     prerelease: true
      #     body: 'some test body'

      # - name: Upload Release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-release.outputs.upload_url }}
      #     asset_path: 'app/out/make/squirrel.windows/x64/some-ts-electron-app-1.0.0 Setup.exe'
      #     asset_name: 'some-ts-electron-app-1.0.0 Setup.exe'
      #     asset_content_type: application/octet-stream

      # - name: Publish Release
      #   uses: eregon/publish-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     release_id: ${{ steps.create-release.outputs.id }}
